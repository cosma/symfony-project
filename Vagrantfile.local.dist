# -*- mode: ruby -*-
# vi: set ft=ruby :

##
# Vagrantfile.local.dist
#
# Template file for local Vagrant configuration. Copy this file to
# Vagrantfile.local:
#
#   cp Vagrantfile.local.dist Vagrantfile.local
#
# If Vagrantfile.local exists it will be loaded by Vagrantfile to overwrite or
# extend default Vagrant configuration.
##

require 'rbconfig'

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # config.vm.box = "wheezy64"
  # config.vm.box_url = "https://opscode-vm.s3.amazonaws.com/vagrant/opscode_debian-7.0.0_provisionerless.box"

  ##
  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  ##
  # config.vm.network :forwarded_port, guest: 80, host: 8080
  # config.vm.network :forwarded_port, guest: 443, host: 8443, host_ip: "0.0.0.0"

  ##
  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  ##
  # config.vm.network :private_network, ip: "192.168.33.10"
  # config.vm.network :private_network, ip: "10.243.1.20"

  # enable NFS on non-windows platforms (increased performance \w symfony2)
  # if !RbConfig::CONFIG['host_os'].match(/mswin|windows/i)
  #   config.vm.synced_folder "./", "/vagrant", :id => "vagrant-root", :nfs => true, :group => false, :mount_options => [:dmode => "775", :fmode => "764"]
  # end

  ##
  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  ##
  # config.vm.network :public_network

  ##
  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
  ##
  # config.ssh.forward_agent = true

  ##
  # Provider-specific configuration so you can fine-tune various backing
  # providers for Vagrant. These expose provider-specific options. View the
  # documentation for the provider you're using for more information on 
  # available options:
  #
  # Virtualbox: http://docs.vagrantup.com/v2/virtualbox/configuration.html
  # VMware: http://docs.vagrantup.com/v2/vmware/configuration.html
  ##
  # config.vm.provider :virtualbox do |vb|
  #   vb.customize ["modifyvm", :id, "--memory", "512"]
  # end
end
